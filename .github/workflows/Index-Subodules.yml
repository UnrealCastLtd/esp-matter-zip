name: Index All Submodules Recursively

on:
  workflow_dispatch:

jobs:
  index_submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive   # <-- fetch all submodules
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create Zipped-Code directory
        run: mkdir -p Zipped-Code/

      - name: Generate and Compare Submodules Index
        id: generate_index
        run: |
          # Recursive function to list submodules inside a commit tree
          list_submodules_recursive() {
            local commit=$1
            local prefix=$2

            git ls-tree "$commit" | awk '/160000/ {print $4, $3}' | while read path subcommit; do
              echo "${prefix}${path}"
              list_submodules_recursive "$subcommit" "${prefix}${path}/"
            done
          }

          # Start recursion from HEAD
          list_submodules_recursive HEAD "" > submodules-new.txt

          # Compare with previous version
          if [ -f Zipped-Code/submodules.txt ]; then
            if cmp -s submodules-new.txt Zipped-Code/submodules.txt; then
              echo "No changes in submodules list. Skipping commit."
              echo "changes_detected=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected. Proceeding with commit."
              mv submodules-new.txt Zipped-Code/submodules.txt
              echo "changes_detected=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "submodules.txt does not exist. Creating and committing new file."
            mv submodules-new.txt Zipped-Code/submodules.txt
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

          rm -f submodules-new.txt

      - name: Commit and Push submodules.txt
        if: steps.generate_index.outputs.changes_detected == 'true'
        run: |
          git add Zipped-Code/submodules.txt
          git commit -m "Update submodules index file (recursive)"
          git push
