name: Index Submodules without .gitmodules

on:
  workflow_dispatch:

jobs:
  index_submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create Zipped-Code directory
        run: mkdir -p Zipped-Code/

      - name: Generate and Compare Submodules Index
        id: generate_index
        run: |
          # Use 'git ls-tree' to find all tree entries marked with mode 160000,
          # which indicates a submodule. This method bypasses the .gitmodules file.
          git ls-tree -r HEAD | grep '160000' | awk '{print $4}' > submodules-new.txt

          # Check if the existing file is different from the newly generated one.
          if [ -f Zipped-Code/submodules.txt ]; then
            if cmp -s submodules-new.txt Zipped-Code/submodules.txt; then
              echo "No changes in submodules list. Skipping commit."
              echo "changes_detected=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected. Proceeding with commit."
              mv submodules-new.txt Zipped-Code/submodules.txt
              echo "changes_detected=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "submodules.txt does not exist. Creating and committing new file."
            mv submodules-new.txt Zipped-Code/submodules.txt
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi
          
          # Clean up the temporary file
          rm -f submodules-new.txt

      - name: Commit and Push submodules.txt
        if: steps.generate_index.outputs.changes_detected == 'true'
        run: |
          git add Zipped-Code/submodules.txt
          git commit -m "Update submodules index file (bypassing .gitmodules)"
          git push
          echo "Successfully updated submodules.txt and pushed changes."
