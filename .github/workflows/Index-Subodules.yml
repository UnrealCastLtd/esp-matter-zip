name: Index All Submodules Recursively (Layer by Layer)

on:
  workflow_dispatch:

jobs:
  index_submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository (no submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create Zipped-Code directory
        run: mkdir -p Zipped-Code/

      - name: Generate and Compare Submodules Index
        id: generate_index
        run: |
          set -euo pipefail

          # Function: recursively discover submodules
          discover_submodules() {
            local repo_url=$1
            local commit=$2
            local prefix=$3

            # Clone repo at specific commit, shallow
            rm -rf tmp_subrepo
            git clone --depth 1 "$repo_url" tmp_subrepo >/dev/null 2>&1 || return
            cd tmp_subrepo
            git fetch --depth 1 origin "$commit" >/dev/null 2>&1 || true
            git checkout "$commit" >/dev/null 2>&1 || true

            # List submodules in this repo (paths + commit IDs)
            git ls-tree -r HEAD | awk '/160000/ {print $4, $3}' | while read path subcommit; do
              echo "${prefix}${path} ${subcommit}" >> ../submodules-new.txt

              # Try to extract submodule URL from .gitmodules if available
              suburl=$(git config -f .gitmodules --get "submodule.${path}.url" || true)
              if [ -n "$suburl" ]; then
                # Recurse into this submodule
                discover_submodules "$suburl" "$subcommit" "${prefix}${path}/"
              fi
            done

            cd ..
            rm -rf tmp_subrepo
          }

          # Start with the main repository
          echo "Discovering submodules..."
          : > submodules-new.txt
          discover_submodules "https://github.com/${{ github.repository }}.git" "$(git rev-parse HEAD)" ""

          # Compare with existing
          if [ -f Zipped-Code/submodules.txt ]; then
            if cmp -s submodules-new.txt Zipped-Code/submodules.txt; then
              echo "No changes in submodules list. Skipping commit."
              echo "changes_detected=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected. Updating index..."
              mv submodules-new.txt Zipped-Code/submodules.txt
              echo "changes_detected=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "Creating new submodules index file."
            mv submodules-new.txt Zipped-Code/submodules.txt
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push submodules.txt
        if: steps.generate_index.outputs.changes_detected == 'true'
        run: |
          git add Zipped-Code/submodules.txt
          git commit -m "Update recursive submodules index file (layer by layer)"
          git push
