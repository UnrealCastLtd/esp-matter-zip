name: Zip Submodules

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  zip-and-move:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false # We will handle submodules manually

      - name: Set up and run script
        run: |
          # Create the main directory for zipped files
          mkdir -p main/Zipped-Code

          # Read the submodules.txt file line by line
          while IFS= read -r line; do
            # Skip empty lines and lines that are not submodule definitions
            if [[ "$line" =~ \[submodule\ \"(.*)\"\] ]]; then
              module_name="${BASH_REMATCH[1]}"
              
              # Find the path and folder from the next lines
              read -r path_line
              path=$(echo "$path_line" | awk -F'=' '{print $2}' | sed 's/^[[:space:]]*//')
              read -r url_line
              url=$(echo "$url_line" | awk -F'=' '{print $2}' | sed 's/^[[:space:]]*//')
              # Optional: handle branch
              read -r next_line
              if [[ "$next_line" =~ "branch" ]]; then
                # Skip the branch line and get the next one which is the Folder
                read -r folder_line
              else
                # It was the folder line
                folder_line="$next_line"
              fi
              folder=$(echo "$folder_line" | awk -F'=' '{print $2}' | sed 's/^[[:space:]]*//')

              echo "Processing submodule: $module_name"
              echo "Path: $path"
              echo "URL: $url"
              echo "Destination Folder: $folder"

              # 1. Clone the module into a temporary directory
              temp_dir="temp_clone"
              git clone --depth 1 "$url" "$temp_dir"

              # 2. Zip the contents of the cloned directory
              # Exclude the .git folder to save space
              zip -r "${module_name}.zip" "$temp_dir" -x "*.git*"

              # 3. Create the destination folder if it doesn't exist
              mkdir -p "$folder"

              # 4. Move the zipped file to the destination folder
              mv "${module_name}.zip" "$folder"

              # 5. Clean up the temporary directory to save space
              rm -rf "$temp_dir"

              echo "Successfully zipped and moved $module_name"
              echo "---------------------------------------"
            fi
          done < main/Zipped-Code/submodules.txt

      - name: Upload Zipped Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zipped-submodules
          path: main/Zipped-Code/
