name: Recursive Submodule Zips

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main
          submodules: recursive

      - name: Remove all .git folders to save space
        run: |
          find . -name ".git" -type d -prune -exec rm -rf {} +

      - name: Recursive zip function
        run: |
          set -e

          mkdir -p recursive_zips

          zip_submodule() {
            local path="$1"
            local dest="$2"

            name=$(basename "$path")
            folder="$dest/$name"

            echo "üì¶ Processing: $name ($path) -> $folder"

            mkdir -p "$folder"

            # Zip all files in current folder except submodules (folders listed in .gitmodules)
            if [ -f "$path/.gitmodules" ]; then
              submodule_paths=$(git config --file "$path/.gitmodules" --get-regexp path | awk '{print $2}')
            else
              submodule_paths=""
            fi

            # Exclude submodule folders from main zip
            exclude=""
            for sm in $submodule_paths; do
              exclude="$exclude --exclude=$sm/*"
            done

            zip -r "$folder/main.zip" "$path" $exclude > "$folder/main.log" 2>&1 && \
              echo "‚úÖ Zipped $name main.zip" || \
              echo "‚ùå Failed $name, see $folder/main.log"

            # Now recursively zip submodules
            for sm in $submodule_paths; do
              if [ -d "$path/$sm" ]; then
                zip_submodule "$path/$sm" "$folder"
              fi
            done
          }

          # Start from the repo root
          zip_submodule "." "recursive_zips"

      - name: Upload all zips
        uses: actions/upload-artifact@v4
        with:
          name: recursive-submodule-zips
          path: recursive_zips
