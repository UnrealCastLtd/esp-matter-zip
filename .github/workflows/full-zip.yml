name: Recursive Submodule Zips

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      # Step 1: Checkout repo recursively
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Step 2: Install zip if missing
      - name: Install zip
        run: sudo apt update && sudo apt install -y zip

      # Step 3: Remove .git folders to save space
      - name: Remove .git folders
        run: find . -name ".git" -type d -prune -exec rm -rf {} +

      # Step 4: Recursive zip script
      - name: Create recursive zips
        run: |
          set -e
          OUTPUT_DIR="recursive_zips"
          ZIP_SIZE_LIMIT="2g"
          mkdir -p "$OUTPUT_DIR"

          zip_submodule() {
              local path="$1"
              local dest="$2"
              local name
              name=$(basename "$path")
              local folder="$dest/$name"

              echo "üì¶ Processing: $name ($path) -> $folder"
              mkdir -p "$folder"

              # Get submodule paths
              if [ -f "$path/.gitmodules" ]; then
                  submodule_paths=$(git config --file "$path/.gitmodules" --get-regexp path | awk '{print $2}')
              else
                  submodule_paths=""
              fi

              # Exclude submodules from main zip
              exclude=""
              for sm in $submodule_paths; do
                  exclude="$exclude --exclude=$sm/*"
              done

              # Zip current folder (excluding submodules) with split
              zip -r -s $ZIP_SIZE_LIMIT "$folder/main.zip" "$path" $exclude > "$folder/main.log" 2>&1 && \
                  echo "‚úÖ Zipped $name" || echo "‚ùå Failed $name, see $folder/main.log"

              # Recursively zip submodules
              for sm in $submodule_paths; do
                  if [ -d "$path/$sm" ]; then
                      zip_submodule "$path/$sm" "$folder"
                  fi
              done
          }

          # Start from repo root
          zip_submodule "." "$OUTPUT_DIR"

      # Step 5: Upload all zips as artifacts
      - name: Upload zips
        uses: actions/upload-artifact@v4
        with:
          name: recursive-submodule-zips
          path: recursive_zips
