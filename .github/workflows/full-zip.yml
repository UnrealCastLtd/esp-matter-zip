name: Recursive Submodule Zips With Named Zips

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      # Step 1: Checkout repository with submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Step 2: Install zip
      - name: Install zip
        run: sudo apt update && sudo apt install -y zip

      # Step 3: Remove .git folders to save space
      - name: Remove .git folders
        run: find . -name ".git" -type d -prune -exec rm -rf {} +

      # Step 4: Recursive zip script with named zips
      - name: Recursive zip-on-discovery with named zips
        run: |
          set -e
          OUTPUT_DIR="recursive_zips"
          ZIP_SIZE_LIMIT="2g"
          mkdir -p "$OUTPUT_DIR"

          zip_on_discovery() {
              local current_path="$1"
              local parent_output="$2"
              local folder_name
              folder_name=$(basename "$current_path")
              local output_folder="$parent_output/$folder_name"

              echo "üì¶ Processing folder: $folder_name ($current_path) -> $output_folder"
              mkdir -p "$output_folder"

              # Detect submodules in this folder
              local submodules=""
              if [ -f "$current_path/.gitmodules" ]; then
                  submodules=$(git config --file "$current_path/.gitmodules" --get-regexp path | awk '{print $2}')
              fi

              # Exclude submodule folders from main zip
              local exclude=""
              for sm in $submodules; do
                  exclude="$exclude --exclude=$sm/*"
              done

              # Zip current folder excluding submodules with zip named after folder
              zip_file="$output_folder/${folder_name}.zip"
              zip -r -s $ZIP_SIZE_LIMIT "$zip_file" "$current_path" $exclude > "$output_folder/${folder_name}.log" 2>&1 && \
                  echo "‚úÖ Zipped $folder_name" || echo "‚ùå Failed $folder_name, see $output_folder/${folder_name}.log"

              # Immediately process each submodule recursively
              for sm in $submodules; do
                  local sm_path="$current_path/$sm"
                  if [ -d "$sm_path" ]; then
                      zip_on_discovery "$sm_path" "$output_folder"
                  fi
              done
          }

          # Start at repo root
          zip_on_discovery "." "$OUTPUT_DIR"

      # Step 5: Upload all zips as artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: recursive-submodule-zips
          path: recursive_zips
